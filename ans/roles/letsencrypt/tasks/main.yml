# step 1
- name: Load host-specific variables
  include_vars:
    file: "vars/{{ ansible_hostname }}.yml"

- name: Create required directories in /etc/letsencrypt
  file:
    path: "{{ letsencrypt_dir }}/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=x,o=x
  with_items:
    - account
    - certs
    - csrs
    - keys

# step 2
- name: Generate a LetsEncrypt account key
  shell: "openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}"
  args:
    creates: "{{ letsencrypt_account_key }}"

# step 3
- name: Generate LetsEncrypt private key
  shell: "openssl genrsa 4096 | sudo tee {{ letsencrypt_keys_dir }}/{{ domain_name }}.key"
  args:
    creates: "{{ letsencrypt_keys_dir }}/{{ domain_name }}.key"

# step 4
- set_fact:
    domain_sans: >-
      {% for san in subdomains %}DNS:{{ san }}.{{ domain_name }}{% if not loop.last %},{% endif %}{% endfor %}
  when: subdomains is defined and subdomains | length > 0


# step 5
- name: Read /etc/ssl/openssl.cnf
  slurp:
    src: /etc/ssl/openssl.cnf
  register: openssl_cnf


- name: Generate LetsEncrypt CSR configuration
  copy:
    dest: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.cnf"
    content: |
      {{ openssl_cnf["content"] | b64decode }}
      {% if subdomains is defined and subdomains | length > 0 %}
      [SAN]
      subjectAltName={{ domain_sans }}
      {% endif %}
    owner: root
    group: root
  register: acme_challenge_cnf


# step 6
- name: Generate LetsEncrypt CSR
  shell: >
    openssl req -new -sha256
    -key {{ letsencrypt_keys_dir }}/{{ domain_name }}.key
    -subj "/CN={{ domain_name }}"
    {% if subdomains is defined and subdomains | length > 0 %}
    -reqexts SAN
    {% endif %}
    -config {{ letsencrypt_csrs_dir }}/{{ domain_name }}.cnf
    | sudo tee {{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr
  args:
    executable: /bin/bash
  when: acme_challenge_cnf is changed


- name: Secure the site with Letsencrypt
  become: true
  vars:
    webroot_path: '/var/www/html'  # the root path of your site
    certbot_source_directory: /usr/local/certbot-src
    certbot_executable_path: "{{ certbot_source_directory }}/venv/bin/certbot"
  tasks:
    - name: Install required packages for certbot
      ansible.builtin.apt:
        name:
          - python3-venv
          - gcc
          - libaugeas0
          - libssl-dev
          - libffi-dev
          - ca-certificates
          - openssl
          - git
      state: present

    - name: Clone the certbot source directory
      ansible.builtin.git:
        depth: 1
        repo: https://github.com/certbot/certbot
        dest: "{{ certbot_source_directory }}"
        update: true
        version: v2.8.0


    - name: Create certbot in virtual environment
      ansible.builtin.command: python3 tools/venv.py
      args:
        chdir: "{{ certbot_source_directory }}"

    - name: Generate the SSL certificate
      ansible.builtin.command: "{{ certbot_executable_path }} --nginx -d {{ domain }} --non-interactive --agree-tos --email {{ email }}"

    - name: Set up automatic renewal
      ansible.builtin.cron:
        name: "Certbot automatic renewal"
        job: "{{ certbot_executable_path }} renew --quiet"
        minute: "11"
        hour: "11"
